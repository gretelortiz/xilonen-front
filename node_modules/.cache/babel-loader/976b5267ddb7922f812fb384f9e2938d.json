{"ast":null,"code":"var _jsxFileName = \"/Users/gretelortiz/Desktop/equipo-7-front/src/pages/create/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet urlApi = \"https://jsonplaceholder.typicode.com/users/\";\nexport const Create = () => {\n  _s();\n\n  const navigate = useNavigate(); // Parametro url\n\n  const {\n    id\n  } = useParams(); // User values\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // State\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false); // const [data, setData] = useState(null);\n\n  const getUser = async () => {\n    setError(false); // Si teniamos algún error previamente\n\n    setLoading(true); // Activamos la pantalla de carga\n    // Hacemos la llamada a nuestro backend\n\n    fetch(urlApi + id) // Then en Javascript es para \"entonces\"\n    .then(response => {\n      // Tomamos la respuesta del backend (es la response)\n      if (response.ok) {\n        // Si la respuesta es correcta\n        // Regresamos la info transformada a json\n        return response.json();\n      } else {\n        // Si no es correcta, ponemos nuestro error en true\n        setError(true); // Quitamos la carga\n\n        setLoading(false); // Regresamos el error por default\n\n        return new Error(response.data);\n      }\n    }).then(data => {\n      // Entonces si todo ha salido bien podemos trabajar con la data del backend\n      // Quitamos la carga\n      setLoading(false); // Guardamos la info\n\n      setName(data.name);\n      setEmail(data.email);\n    }).catch(error => {\n      // Si tenemos algún error en nuestro codigo guardamos el error\n      setLoading(false);\n      setError(true);\n    });\n  };\n\n  useEffect(() => {\n    if (id) {\n      getUser();\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Ha ocurrido un error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Editar user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Rellena los campos para editar un user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: () => {\n          navigate(\"/\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"name\",\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Ingresa el nombre\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"name\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Ingresa el email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Editar user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"2EXL8tzgJ250aGdTCB0o9ybwMSI=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/gretelortiz/Desktop/equipo-7-front/src/pages/create/index.js"],"names":["React","useState","useEffect","useParams","useNavigate","urlApi","Create","navigate","id","name","setName","email","setEmail","loading","setLoading","error","setError","getUser","fetch","then","response","ok","json","Error","data","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nlet urlApi = \"https://jsonplaceholder.typicode.com/users/\";\n\nexport const Create = () => {\n  const navigate = useNavigate();\n  // Parametro url\n  const { id } = useParams();\n  // User values\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  // State\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  // const [data, setData] = useState(null);\n\n  const getUser = async () => {\n    setError(false); // Si teniamos algún error previamente\n    setLoading(true); // Activamos la pantalla de carga\n    // Hacemos la llamada a nuestro backend\n    fetch(urlApi + id)\n      // Then en Javascript es para \"entonces\"\n      .then((response) => {\n        // Tomamos la respuesta del backend (es la response)\n        if (response.ok) {\n          // Si la respuesta es correcta\n          // Regresamos la info transformada a json\n          return response.json();\n        } else {\n          // Si no es correcta, ponemos nuestro error en true\n          setError(true);\n          // Quitamos la carga\n          setLoading(false);\n          // Regresamos el error por default\n          return new Error(response.data);\n        }\n      })\n      .then((data) => {\n        // Entonces si todo ha salido bien podemos trabajar con la data del backend\n        // Quitamos la carga\n        setLoading(false);\n        // Guardamos la info\n        setName(data.name);\n        setEmail(data.email);\n      })\n      .catch((error) => {\n        // Si tenemos algún error en nuestro codigo guardamos el error\n        setLoading(false);\n        setError(true);\n      });\n  };\n  useEffect(() => {\n    if (id) {\n      getUser();\n    }\n  }, [id]);\n  return (\n    <div className=\"page__container\">\n      {loading ? (\n        <span>Cargando...</span>\n      ) : error ? (\n        <span>Ha ocurrido un error</span>\n      ) : (\n        <>\n          <h1>Editar user</h1>\n          <span>Rellena los campos para editar un user</span>\n          <form\n            onSubmit={() => {\n              navigate(\"/\");\n            }}\n          >\n            <label for=\"name\">Nombre</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Ingresa el nombre\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <label for=\"name\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Ingresa el email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <button type=\"submit\">Editar user</button>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}