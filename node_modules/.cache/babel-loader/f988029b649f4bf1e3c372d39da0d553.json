{"ast":null,"code":"var _jsxFileName = \"/Users/gretelortiz/Desktop/equipo-7-front/src/pages/home/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet urlApi = \"https://jsonplaceholder.typicode.com/users\";\nexport const Home = () => {\n  _s();\n\n  const navigate = useNavigate(); // Cargando la petición a la API\n\n  const [loading, setLoading] = useState(false); // Error\n\n  const [error, setError] = useState(false); // Data\n\n  const [data, setData] = useState(null);\n\n  const getUsers = async () => {\n    setError(false); // Si teniamos algún error previamente\n\n    setLoading(true); // Activamos la pantalla de carga\n    // Hacemos la llamada a nuestro backend\n\n    fetch(urlApi) // Then en Javascript es para \"entonces\"\n    .then(response => {\n      // Tomamos la respuesta del backend (es la response)\n      if (response.ok) {\n        // Si la respuesta es correcta\n        // Regresamos la info transformada a json\n        return response.json();\n      } else {\n        // Si no es correcta, ponemos nuestro error en true\n        setError(true); // Quitamos la carga\n\n        setLoading(false); // Regresamos el error por default\n\n        return new Error(response.data);\n      }\n    }).then(data => {\n      // Entonces si todo ha salido bien podemos trabajar con la data del backend\n      // Quitamos la carga\n      setLoading(false); // Guardamos la info\n\n      setData(data);\n    }).catch(error => {\n      // Si tenemos algún error en nuestro codigo guardamos el error\n      setLoading(false);\n      setError(true);\n    });\n  };\n\n  const renderUsers = () => {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data === null || data === void 0 ? void 0 : data.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              navigate(`/edit/${item.id}`);\n            },\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : error ?\n    /*#__PURE__*/\n    // Else if error\n    _jsxDEV(\"span\", {\n      children: \"Ha ocurrido un error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // else\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Listado de users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Acciones\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), renderUsers()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"fqRs1jnFIYT4X/7k2GsIRYvpjGY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/gretelortiz/Desktop/equipo-7-front/src/pages/home/index.jsx"],"names":["React","useState","useEffect","useNavigate","urlApi","Home","navigate","loading","setLoading","error","setError","data","setData","getUsers","fetch","then","response","ok","json","Error","catch","renderUsers","map","item","key","name","email","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nlet urlApi = \"https://jsonplaceholder.typicode.com/users\";\n\nexport const Home = () => {\n  const navigate = useNavigate();\n  // Cargando la petición a la API\n  const [loading, setLoading] = useState(false);\n  // Error\n  const [error, setError] = useState(false);\n  // Data\n  const [data, setData] = useState(null);\n\n  const getUsers = async () => {\n    setError(false); // Si teniamos algún error previamente\n    setLoading(true); // Activamos la pantalla de carga\n    // Hacemos la llamada a nuestro backend\n    fetch(urlApi)\n      // Then en Javascript es para \"entonces\"\n      .then((response) => {\n        // Tomamos la respuesta del backend (es la response)\n        if (response.ok) {\n          // Si la respuesta es correcta\n          // Regresamos la info transformada a json\n          return response.json();\n        } else {\n          // Si no es correcta, ponemos nuestro error en true\n          setError(true);\n          // Quitamos la carga\n          setLoading(false);\n          // Regresamos el error por default\n          return new Error(response.data);\n        }\n      })\n      .then((data) => {\n        // Entonces si todo ha salido bien podemos trabajar con la data del backend\n        // Quitamos la carga\n        setLoading(false);\n        // Guardamos la info\n        setData(data);\n      })\n      .catch((error) => {\n        // Si tenemos algún error en nuestro codigo guardamos el error\n        setLoading(false);\n        setError(true);\n      });\n  };\n  const renderUsers = () => {\n    return (\n      <tbody>\n        {data?.map((item, key) => (\n          <tr key={key}>\n            <td>{item.name}</td>\n            <td>{item.email}</td>\n            <td>\n              <button\n                onClick={() => {\n                  navigate(`/edit/${item.id}`);\n                }}\n              >\n                Editar\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    );\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return (\n    <div className=\"page__container\">\n      {/* If loading*/}\n      {loading ? (\n        <span>Cargando...</span>\n      ) : error ? (\n        // Else if error\n        <span>Ha ocurrido un error</span>\n      ) : (\n        // else\n        <>\n          <h1>Listado de users</h1>\n          <table>\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Email</th>\n                <th>Acciones</th>\n              </tr>\n            </thead>\n            {renderUsers()}\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}